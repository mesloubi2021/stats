#!/usr/bin/perl

require "./stats/tag2date.pm";

sub num {
    my ($t)=@_;
    if($t =~ /^curl-(\d)_(\d+)_(\d+)/) {
        return 10000*$1 + 100*$2 + $3;
    }
    elsif($t =~ /^curl-(\d)_(\d+)/) {
        return 10000*$1 + 100*$2;
    }
}


sub sortthem {
    return num($a) <=> num($b);
}

@alltags= `git tag -l`;

foreach my $t (@alltags) {
    chomp $t;
    if($t =~ /^curl-([0-9_]*[0-9])\z/) {
        push @releases, $t;
    }
}

sub cpyuse {
    my ($tag, $path) = @_;

    # Get source files to count
    my @files;
    open(G, "git ls-tree -r --name-only $tag -- $path 2>/dev/null|");
    while(<G>) {
        chomp;
        if($_ =~ /[ch]\z/) {
            push @files, $_;
        }
    }
    close(G);

    my $cmd;
    for(@files) {
        $cmd .= "$tag:$_ ";
    }

    my $count;
    my $alloc;

    open(G, "git show $cmd 2>/dev/null| grep -E '(mem|str|strn)cpy\\('|");
    while(<G>) {
        $count++;
    }
    close(G);

    open(G, "git show $cmd 2>/dev/null| grep -E '(re|m|c)alloc\\('|");
    while(<G>) {
        $alloc++;
    }
    close(G);

    my $blanks, $comments, $code;
    open(G, "git show $cmd 2>/dev/null| cloc --force-lang=C --csv -|");
    while(<G>) {
        if($_ =~ /^1,SUM,(\d*),(\d*),(\d*)/) {
            ($blanks, $comments, $code)=($1, $2, $3);
            last;
        }
    }
    close(G);

    return ($count, $alloc, $code);
}

print <<CACHE
2000-03-14;4.998;43;2.557;22
2000-03-21;5.021;43;2.569;22
2000-03-21;5.021;43;2.569;22
2000-08-21;5.122;48;2.774;26
2000-08-30;5.092;48;2.758;26
2000-09-28;5.078;55;3.139;34
2000-10-16;5.083;56;4.266;47
2000-12-04;4.851;54;4.222;47
2001-01-05;4.824;54;4.199;47
2001-01-27;4.808;54;4.184;47
2001-02-13;4.644;54;4.042;47
2001-03-22;4.364;54;4.284;53
2001-04-04;4.516;56;4.274;53
2001-04-23;4.489;56;4.249;53
2001-05-07;4.445;56;4.207;53
2001-06-07;4.391;56;4.156;53
2001-08-20;4.238;53;4.477;56
2001-09-25;4.344;58;4.868;65
2001-11-04;4.413;61;4.703;65
2001-12-05;4.415;63;4.765;68
2002-01-23;4.158;64;5.002;77
2002-02-05;4.212;65;5.055;78
2002-03-07;4.192;66;5.017;79
2002-04-15;4.097;65;4.917;78
2002-05-13;4.090;66;5.206;84
2002-06-13;4.034;66;5.134;84
2002-10-01;3.915;67;4.909;84
2002-10-11;3.900;67;4.948;85
2002-11-18;3.994;69;4.920;85
2003-01-14;4.070;71;4.930;86
2003-04-02;4.247;68;5.371;86
2003-05-19;4.395;72;5.494;90
2003-07-28;4.623;82;5.300;94
2003-08-15;4.480;82;5.245;96
2003-11-01;4.532;85;5.278;99
2004-01-22;4.384;84;5.167;99
2004-03-18;4.098;83;5.529;112
2004-04-26;3.971;82;5.618;116
2004-06-02;3.768;84;5.428;121
2004-08-10;3.388;76;5.216;117
2004-10-18;3.391;78;5.087;117
2004-12-20;3.277;78;4.958;118
2005-02-01;3.213;77;4.966;119
2005-03-04;3.239;81;4.799;120
2005-04-05;3.270;82;4.865;122
2005-05-16;3.186;82;4.779;123
2005-09-01;3.182;83;4.793;125
2005-10-13;3.147;84;4.720;126
2005-12-06;3.120;84;4.754;128
2006-02-27;3.058;83;4.715;128
2006-03-20;3.056;83;4.713;128
2006-06-12;3.149;91;4.568;132
2006-08-07;3.138;92;4.536;133
2006-10-29;3.111;94;4.435;134
2007-01-29;3.228;102;4.494;142
2007-04-11;3.112;103;4.381;145
2007-06-25;3.167;108;4.340;148
2007-07-10;3.213;111;4.313;149
2007-09-13;2.994;106;4.180;148
2007-10-29;3.005;109;4.301;156
2008-01-28;3.100;114;4.324;159
2008-03-30;3.090;114;4.309;159
2008-06-04;3.056;114;4.289;160
2008-09-01;3.058;116;4.270;162
2008-11-05;3.249;126;4.332;168
2008-11-13;3.255;126;4.314;167
2009-01-19;3.196;124;4.099;159
2009-03-02;3.797;153;4.343;175
2009-05-18;3.781;153;4.275;173
2009-08-12;3.891;159;4.258;174
2009-11-04;3.825;158;4.212;174
2010-02-09;3.488;156;4.091;183
2010-04-14;3.447;156;4.043;183
2010-06-16;3.354;163;3.972;193
2010-08-11;3.387;166;3.917;192
2010-10-12;3.403;168;3.930;194
2010-12-15;3.370;168;3.891;194
2011-02-17;3.326;169;3.975;202
2011-04-17;3.283;169;3.924;202
2011-04-22;3.278;169;3.918;202
2011-06-23;3.260;168;3.880;200
2011-09-13;3.205;167;3.858;201
2011-11-14;3.196;168;3.842;202
2011-11-17;3.196;168;3.842;202
2012-01-24;3.153;168;3.791;202
2012-03-22;3.162;169;3.780;202
2012-05-24;3.173;171;3.785;204
2012-07-27;3.143;179;3.757;214
2012-10-10;3.105;179;3.729;215
2012-11-20;3.093;179;3.715;215
2013-02-06;3.044;177;3.732;217
2013-04-12;3.099;184;3.722;221
2013-06-22;3.114;187;3.730;224
2013-08-11;3.071;191;3.698;230
2013-10-13;2.888;181;3.685;231
2013-12-16;2.877;182;3.651;231
2014-01-29;2.861;182;3.646;232
2014-03-26;3.103;201;3.658;237
2014-05-20;3.105;203;3.625;237
2014-07-16;3.100;204;3.662;241
2014-09-10;3.103;208;3.685;247
2014-11-05;3.083;206;3.756;251
2015-01-07;3.156;218;3.750;259
2015-02-25;3.234;220;3.808;259
2015-04-22;3.231;220;3.804;259
2015-04-28;3.231;220;3.804;259
2015-06-17;3.207;220;3.746;257
2015-08-11;3.248;224;3.799;262
2015-10-07;3.246;224;3.767;260
2015-12-01;3.236;226;3.737;261
2016-01-27;3.241;227;3.754;263
2016-02-08;3.241;227;3.755;263
2016-03-23;3.231;227;3.744;263
2016-05-17;3.186;228;3.703;265
2016-05-30;3.182;228;3.713;266
2016-07-21;3.158;227;3.687;265
2016-08-03;3.157;227;3.686;265
2016-09-07;3.145;227;3.671;265
2016-09-14;3.144;227;3.670;265
2016-11-02;3.117;225;3.672;265
2016-12-20;3.092;227;3.691;271
2016-12-22;3.092;227;3.691;271
2017-02-22;3.092;228;3.730;275
2017-02-24;3.092;228;3.729;275
2017-04-19;3.065;227;3.672;272
2017-06-14;3.105;231;3.670;273
2017-08-09;3.116;232;3.667;273
2017-08-13;3.113;232;3.663;273
2017-10-04;3.197;244;3.656;279
2017-10-23;3.184;244;3.641;279
2017-11-29;3.163;245;3.615;280
2018-01-23;3.095;247;3.571;285
2018-03-13;3.103;249;3.552;285
2018-05-15;3.094;251;3.574;290
2018-07-11;3.092;252;3.558;290
2018-09-04;3.084;252;3.574;292
2018-10-30;3.054;257;3.518;296
2018-12-12;3.051;256;3.528;296
2019-02-06;3.079;259;3.519;296
2019-03-27;3.076;261;3.512;298
2019-05-22;3.026;256;3.499;296
2019-06-04;3.024;256;3.497;296
2019-07-17;3.024;256;3.497;296
2019-07-19;3.025;256;3.497;296
2019-09-10;3.025;264;3.472;303
2019-11-05;3.052;267;3.487;305
2020-01-08;3.142;278;3.493;309
2020-03-04;3.118;279;3.454;309
2020-03-11;3.110;279;3.445;309
2020-04-29;3.174;288;3.471;315
2020-06-23;3.064;281;3.151;289
2020-06-30;3.075;282;3.162;290
2020-08-19;3.064;282;3.162;291
2020-10-14;3.055;282;3.152;291
2020-12-09;3.041;282;3.170;294
2021-02-03;2.952;280;3.163;300
2021-03-31;2.889;276;3.150;301
2021-04-14;2.888;276;3.139;300
2021-05-26;2.903;279;3.143;302
2021-07-21;2.964;286;3.161;305
2021-09-14;2.914;282;3.152;305
2021-09-22;2.924;283;3.151;305
2021-11-10;2.927;285;3.143;306
2022-01-05;2.961;290;3.135;307
2022-03-05;2.939;284;3.136;303
2022-04-27;2.956;289;3.130;306
2022-05-11;2.963;290;3.127;306
2022-06-27;2.960;292;3.143;310
2022-08-31;2.962;294;3.134;311
2022-10-26;2.953;296;2.983;299
2022-12-21;2.908;296;3.006;306
2023-02-15;2.768;292;3.014;318
2023-02-20;2.767;292;3.013;318
2023-03-20;2.688;285;2.943;312
2023-03-20;2.688;285;2.943;312
2023-05-17;2.558;281;2.895;318
2023-05-23;2.558;281;2.895;318
2023-05-30;2.560;281;2.897;318
2023-07-19;2.547;281;2.883;318
2023-07-26;2.547;281;2.883;318
2023-09-13;2.577;279;2.919;316
2023-10-11;2.591;280;2.933;317
2023-12-06;2.591;282;2.922;318
2024-01-31;2.219;247;2.614;291
2024-03-27;2.093;237;2.544;288
2024-03-27;2.093;237;2.544;288
CACHE
    ;

sub show {
    my ($t, $d) = @_;
    my ($cpy, $alloc, $code) = cpyuse($t, "lib");
    printf "$d;%.3f;%u;%.3f;%u\n", $cpy * 1000 / $code, $cpy, $alloc * 1000 / $code, $alloc;
}

foreach my $t (sort sortthem @releases) {
    if(num($t) <= 80701) {
        next;
    }
    my $d = tag2date($t);
    show($t, $d);
}

$t=`git describe`;
chomp $t;

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) =
    localtime(time);
my $d = sprintf "%04d-%02d-%02d", $year + 1900, $mon + 1, $mday;

show($t, $d);
